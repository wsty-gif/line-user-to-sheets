"use strict";(()=>{var e={};e.id=38,e.ids=[38],e.modules={2261:e=>{e.exports=require("@line/bot-sdk")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1488:(e,t,s)=>{s.r(t),s.d(t,{config:()=>c,default:()=>u,routeModule:()=>l});var r={};s.r(r),s.d(r,{default:()=>handler});var a=s(1802),n=s(7153),o=s(6249),i=s(2261);async function handler(e,t){let{account:s}=e.query,r=Number(s)||1,a=process.env[`CHANNEL_ACCESS_TOKEN_${r}`],n=process.env[`CHANNEL_SECRET_${r}`];if(!a||!n)return t.status(500).json({success:!1,error:"no channel access token"});let o=new i.Client({channelAccessToken:a,channelSecret:n});try{let e=await o.getBotInfo();t.status(200).json({success:!0,botName:e.displayName})}catch(e){console.error(e),t.status(500).json({success:!1,error:"getBotInfo failed"})}}let u=(0,o.l)(r,"default"),c=(0,o.l)(r,"config"),l=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/get-botname",pathname:"/api/get-botname",bundlePath:"",filename:""},userland:r})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[222],()=>__webpack_exec__(1488));module.exports=s})();